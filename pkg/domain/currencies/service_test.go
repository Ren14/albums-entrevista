// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/domain/currencies/service.go

// Package mock_currencies is a generated GoMock package.
package currencies

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockCurrencyRepo is a mock of CurrencyRepo interface.
type MockCurrencyRepo struct {
	ctrl     *gomock.Controller
	recorder *MockCurrencyRepoMockRecorder
}

// MockCurrencyRepoMockRecorder is the mock recorder for MockCurrencyRepo.
type MockCurrencyRepoMockRecorder struct {
	mock *MockCurrencyRepo
}

// NewMockCurrencyRepo creates a new mock instance.
func NewMockCurrencyRepo(ctrl *gomock.Controller) *MockCurrencyRepo {
	mock := &MockCurrencyRepo{ctrl: ctrl}
	mock.recorder = &MockCurrencyRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCurrencyRepo) EXPECT() *MockCurrencyRepoMockRecorder {
	return m.recorder
}

// GetPrice mocks base method.
func (m *MockCurrencyRepo) GetPrice() float64 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPrice")
	ret0, _ := ret[0].(float64)
	return ret0
}

// GetPrice indicates an expected call of GetPrice.
func (mr *MockCurrencyRepoMockRecorder) GetPrice() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPrice", reflect.TypeOf((*MockCurrencyRepo)(nil).GetPrice))
}
